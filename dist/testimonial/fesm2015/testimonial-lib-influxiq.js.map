{"version":3,"file":"testimonial-lib-influxiq.js.map","sources":["ng://testimonial-lib-influxiq/lib/testimonial.service.ts","ng://testimonial-lib-influxiq/lib/testimonial.component.ts","ng://testimonial-lib-influxiq/lib/Components/addedit/addedit.component.ts","ng://testimonial-lib-influxiq/lib/Modules/material-module.ts","ng://testimonial-lib-influxiq/lib/testimonial.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestimonialService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\n\n\n@Component({\n  selector: 'lib-testimonial',\n  templateUrl: 'testimonial.component.html',\n  styleUrls: ['testimonial.component.css']\n})\nexport class TestimonialComponent implements OnInit {\n\n  // ==============================================declaration============================================\n  public testimonialListConfig: any;\n  public loader: boolean = true;\n  // =====================================================================================================\n\n\n\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n   \n    this.testimonialListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\",\"image\",\"description\",\"name\"],\n      listArray_modify_header: { \"name copy\": \"Customer/User Name\", \"email\": \"Customer/User Email\", \"description html\": \"Testimonial\", \"priority\": \"Priority\", \"status\": \"Status\" },\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      search_settings:{\n        textsearch: [{ label: \"Search By Customer Name\", field: 'name_copy' },{ label: \"Search By Customer Email\", field: 'email' }],\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\n      },\n       /*Showing Image in the Modal*/\n       pendingmodelapplicationarray_detail_datatype: [{\n        key: \"image\",\n        value: 'image',\n        fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \n      }],\n      detail_header:['_id']\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms'\nimport { TestimonialService } from '../../testimonial.service';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { tick } from '@angular/core/src/render3';\n\n\nexport interface DialogData {\n  msg: string;\n}\nexport interface PreviewDialog {\n  msg: any;\n}\n\n@Component({\n  selector: 'lib-addedit',\n  templateUrl: './addedit.component.html',\n  styleUrls: ['./addedit.component.css']\n})\nexport class AddeditComponent implements OnInit {\n\n\n  /**ckeditor start here*/\n  public Editor = ClassicEditor;  //for ckeditor\n  editorConfig = {\n    placeholder: 'Write testimonial...',\n  };\n  public model = {\n    editorData: ''\n  };\n  /**ckeditor end here*/\n\n\n  //  ========================================Declaration Section======================================\n  public buttonText = \"SUBMIT\";\n  public testimonialForm: FormGroup;\n  public loader: boolean = false;\n  public configData;\n  public testimonialAudio: any;\n  public successMessage: string = \"Submitted Successfully\";\n  public dialogRef: any;\n  public imageConfigData: any;\n  public ErrCode: boolean = false;\n  public flag: boolean;\n  public flag2: boolean = false;\n  public img_var: any;\n  public header_name: any;\n  public image_name: any;\n  public image_type: any;\n  public youtube_suffix: any = \"https://www.youtube.com/embed/\";\n  public editorconfig: any = {};\n  public audioConfigData: any;\n\n  // ==================================================================================================\n\n\n  constructor(private formBuilder: FormBuilder, private testiService: TestimonialService,\n    private router: Router, public dialog: MatDialog, private sanitizer: DomSanitizer) {\n    this.editorconfig.extraAllowedContent = '*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}';\n  }\n\n  ngOnInit() {\n    this.loader = false;\n    this.generateForm();\n    // --------------------------------checking the cases------------------------ \n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        this.flag = false;\n        this.header_name = \"Add Testimonial\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"EDIT\";\n        this.flag = true;\n        break;\n    }\n    // --------------------------------------------------------------------------\n\n  }\n\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n\n  @Input()\n  set imageUpload(getConfig: any) {\n    this.imageConfigData = getConfig;\n  }\n\n  @Input()\n  set audioUpload(getConfig: any) {\n    this.audioConfigData = getConfig;\n    //console.warn(getConfig);\n  }\n\n  // =====================================Form Validation/generation===================================\n  generateForm() {\n    this.testimonialForm = this.formBuilder.group({\n      name: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/\n      )]],\n      description: ['', [Validators.required]],\n      priority: ['', Validators.required],\n      status: [true,],\n      testimonial_img: ['',],\n      video_url: [null],\n      video_name: [],\n      video_desc: [],\n      testimonial_audio: [null],\n      userId: [this.configData.userData.id, null]\n    })\n\n  }\n  // =================================================================================================\n\n\n\n  // ==========================================SUBMIT=================================================\n\n\n  onSubmit() {\n    // Testimonial File Upload Works \n    if (this.imageConfigData.files) {\n\n      if (this.imageConfigData.files.length > 1) { this.ErrCode = true; return; }\n      this.testimonialForm.value.testimonial_img =\n      {\n        \"basepath\": this.imageConfigData.files[0].upload.data.basepath + '/' + this.imageConfigData.path + '/',\n        \"image\": this.imageConfigData.files[0].upload.data.data.fileservername,\n        \"name\": this.imageConfigData.files[0].name,\n        \"type\": this.imageConfigData.files[0].type\n      };\n    }\n\n\n    // Testimonial audio Upload Works \n    if (this.audioConfigData.files) {\n\n      if (this.audioConfigData.files.length > 1) { this.ErrCode = true; return; }\n      this.testimonialForm.value.testimonial_audio =\n      {\n        \"basepath\": this.audioConfigData.files[0].upload.data.basepath + '/' + this.audioConfigData.path + '/',\n        \"audio\": this.audioConfigData.files[0].upload.data.data.fileservername,\n        \"name\": this.audioConfigData.files[0].name,\n        \"type\": this.audioConfigData.files[0].type\n      };\n    }\n\n    this.testimonialForm.controls['description'].markAsTouched();\n    this.loader = true;\n    /* stop here if form is invalid */\n    if (this.testimonialForm.invalid) {\n      return;\n    } else {\n      if (this.testimonialForm.value.status) {\n        this.testimonialForm.value.status = 1;\n      } else {\n        this.testimonialForm.value.status = 0;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.testimonialForm.value, this.configData.condition)\n      };\n     // console.warn(postData);\n      this.testiService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try angain.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try angain.\");\n      });\n    }\n  }\n  // =================================================================================================\n\n\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    //console.warn(\"defauiltvalue\",defaultValue);\n    this.testimonialForm.patchValue({\n      name: defaultValue.name,\n      email: defaultValue.email,\n      description: defaultValue.description,\n      priority: defaultValue.priority,\n      status: defaultValue.status,\n      userId: null,\n      testimonial_img: defaultValue.testimonial_img,\n      video_url: defaultValue.video_url,\n      video_name: defaultValue.video_name,\n      video_desc: defaultValue.video_desc,\n      testimonial_audio: defaultValue.testimonial_audio\n    });\n    this.img_var = defaultValue.testimonial_img.basepath + defaultValue.testimonial_img.image;\n    this.image_name = defaultValue.testimonial_img.name;\n    this.image_type = defaultValue.testimonial_img.type;\n    if (defaultValue.testimonial_audio != null) {\n      this.flag2 = true;\n      this.testimonialAudio = defaultValue.testimonial_audio.basepath + defaultValue.testimonial_audio.audio;\n    }\n\n    //console.log(\">>>\",this.img_var);\n  }\n  // ==================================================================================================\n\n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n\n\n\n  //  =====================preview video================\n  preview_video() {\n    this.dialogRef = this.dialog.open(PreviewComponent, {\n      width: '850px',\n      height: '500px',\n\n      data: { msg: this.youtube_suffix + this.testimonialForm.value.video_url }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // ===================================================\n\n\n\n\n  inputBlur(val: any) {\n    this.testimonialForm.controls[val].markAsUntouched();\n  }\n\n\n\n\n\n  // ==========================================Clear MAT tag===================================\n  clear_image() {\n    this.flag = false;\n  }\n  // ========================================================================================\n  clear_audio() {\n    this.flag2 = false;\n    this.testimonialForm.controls['testimonial_audio'].setValue('');\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n\n\n\n// preview cmponent\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'preview.html',\n})\nexport class PreviewComponent {\n  safeSrc: SafeResourceUrl;\n  constructor(\n    public dialogRef: MatDialogRef<PreviewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: PreviewDialog, private sanitizer: DomSanitizer) {\n    this.safeSrc = this.sanitizer.bypassSecurityTrustResourceUrl(data.msg);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n//import { MatFileUploadModule } from 'angular-material-fileupload';\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    //MatFileUploadModule\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { NgModule } from '@angular/core';\nimport { TestimonialComponent } from './testimonial.component';\nimport { AddeditComponent , Modal, PreviewComponent } from './Components/addedit/addedit.component';\nimport { DemoMaterialModule } from './Modules/material-module';\nimport { CKEditorModule } from 'ngx-ckeditor';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ListingModule } from 'listing-angular7';\nimport { FileUploadModule } from 'file-upload-lib-influxiq';\n\n@NgModule({\n  declarations: [TestimonialComponent, AddeditComponent ,Modal, PreviewComponent],\n  imports: [\n    DemoMaterialModule,\n    CKEditorModule,\n    HttpClientModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    BrowserModule,\n    ListingModule,\n    FileUploadModule\n  ],\n  exports: [TestimonialComponent,AddeditComponent] ,\n  entryComponents:[Modal, PreviewComponent ]\n  \n})\nexport class TestimonialModule {\n\n  \n }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAUa,kBAAkB;;;;;;IAkB7B,YAAoB,KAAiB,EAAU,SAAqB,EAAS,aAA6B;QAAtF,UAAK,GAAL,KAAK,CAAY;QAAU,cAAS,GAAT,SAAS,CAAY;QAAS,kBAAa,GAAb,aAAa,CAAgB;QAdnG,aAAQ,GAAQ,EAAE,CAAC;QAEnB,gBAAW,GAAQ,EAAE,CAAC;QACtB,gBAAW,GAAQ,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QACtD,mBAAc,GAAQ,EAAE,CAAC;QACzB,cAAS,GAAQ,EAAE,CAAC;QAOpB,wBAAmB,GAAQ,UAAU,CAAC;KAEkE;;;;;IAE/G,cAAc;;;;;;;;KAQb;;;;;;IAED,OAAO,CAAC,QAAa,EAAE,WAAgB;;cAC/B,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,WAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,IAAI,CAAC,WAAW;aAClC,CAAC;SACH;;YACG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG;;;;QAAC,GAAG,IAAI,GAAG,EAAC,CAAC;QACvH,OAAO,MAAM,CAAC;KACf;;;;;;IAED,UAAU,CAAC,QAAa,EAAE,WAAgB;;cAClC,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,WAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,IAAI,CAAC,WAAW;aAClC,CAAC;SACH;;YACG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG;;;;QAAC,GAAG,IAAI,GAAG,EAAC,CAAC;QACvH,OAAO,MAAM,CAAC;KACf;;;;;;IAED,OAAO,CAAC,QAAa,EAAE,WAAgB;;cAC/B,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,WAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,IAAI,CAAC,WAAW;aAClC,CAAC;SACH;;YACG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG;;;;QAAC,GAAG,IAAI,GAAG,EAAC,CAAC;QACvH,OAAO,MAAM,CAAC;KACf;;;;;;IAED,gBAAgB,CAAC,QAAa,EAAE,WAAgB;;cACxC,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,WAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,IAAI,CAAC,WAAW;aAClC,CAAC;SACH;;YACG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG;;;;QAAC,GAAG,IAAI,GAAG,EAAC,CAAC;QACvH,OAAO,MAAM,CAAC;KACf;;;;;;IAED,kBAAkB,CAAC,QAAa,EAAE,WAAgB;;cAC1C,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,WAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,IAAI,CAAC,WAAW;aAClC,CAAC;SACH;;YACG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG;;;;QAAC,GAAG,IAAI,GAAG,EAAC,CAAC;QACvH,OAAO,MAAM,CAAC;KACf;;;;;;IAED,yBAAyB,CAAC,QAAa,EAAE,WAAgB;;cACjD,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,WAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,IAAI,CAAC,WAAW;aAClC,CAAC;SACH;;YACG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG;;;;QAAC,GAAG,IAAI,GAAG,EAAC,CAAC;QACvH,OAAO,MAAM,CAAC;KACf;;;;;;IAED,2BAA2B,CAAC,QAAa,EAAE,WAAgB;;cACnD,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,WAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,IAAI,CAAC,WAAW;aAClC,CAAC;SACH;;YACG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,GAAG,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG;;;;QAAC,GAAG,IAAI,GAAG,EAAC,CAAC;QAChI,OAAO,MAAM,CAAC;KACf;;;;;;IAED,aAAa,CAAC,QAAa,EAAE,WAAgB;;cACrC,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,WAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;gBAClC,eAAe,EAAE,IAAI,CAAC,WAAW;aAClC,CAAC;SACH;;YACG,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,GAAG;;;;QAAC,GAAG,IAAI,GAAG,EAAC,CAAC;QACvH,OAAO,MAAM,CAAC;KACf;;;YAvHF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;YARQ,UAAU;YAAV,UAAU;YAGV,aAAa;;;;;;;;;ACJtB,MAQa,oBAAoB;;IA4C/B;QAxCO,WAAM,GAAY,IAAI,CAAC;KAwCb;;;;;;;IAjCjB,IACI,MAAM,CAAC,YAAiB;QAE1B,IAAI,CAAC,qBAAqB,GAAG;YAC3B,MAAM,EAAE,YAAY,CAAC,UAAU;YAC/B,YAAY,EAAE,YAAY,CAAC,YAAY;YACvC,UAAU,EAAE,YAAY,CAAC,UAAU;YACnC,SAAS,EAAE,YAAY,CAAC,SAAS;YACjC,cAAc,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,YAAY,EAAE,IAAI,EAAE,YAAY,EAAC,OAAO,EAAC,aAAa,EAAC,MAAM,CAAC;YAChG,uBAAuB,EAAE,EAAE,WAAW,EAAE,oBAAoB,EAAE,OAAO,EAAE,qBAAqB,EAAE,kBAAkB,EAAE,aAAa,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE;YAC7K,uBAAuB,EAAE,OAAO;YAChC,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;YACrE,SAAS,EAAE,YAAY,CAAC,cAAc;YACtC,OAAO,EAAE,YAAY,CAAC,OAAO;YAC7B,QAAQ,EAAE,YAAY,CAAC,QAAQ;YAC/B,cAAc,EAAE,YAAY,CAAC,cAAc;YAC3C,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,eAAe,EAAC;gBACd,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,yBAAyB,EAAE,KAAK,EAAE,WAAW,EAAE,EAAC,EAAE,KAAK,EAAE,0BAA0B,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC;gBAC5H,YAAY,EAAE,CAAC,EAAE,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC,EAAE,CAAC;aACnI;;YAEA,4CAA4C,EAAE,CAAC;oBAC9C,GAAG,EAAE,OAAO;oBACZ,KAAK,EAAE,OAAO;oBACd,OAAO,EAAE,2EAA2E;iBACrF,CAAC;YACF,aAAa,EAAC,CAAC,KAAK,CAAC;SACtB,CAAA;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;KACrB;;;;IAKD,QAAQ;KACP;;;YApDF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,ihDAAyC;;aAE1C;;;;;qBAYE,KAAK;;;;;;;;ACnBR,MAsBa,gBAAgB;;;;;;;;;IAqC3B,YAAoB,WAAwB,EAAU,YAAgC,EAC5E,MAAc,EAAS,MAAiB,EAAU,SAAuB;QAD/D,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAoB;QAC5E,WAAM,GAAN,MAAM,CAAQ;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,cAAS,GAAT,SAAS,CAAc;;;;QAlC5E,WAAM,GAAG,aAAa,CAAC;;QAC9B,iBAAY,GAAG;YACb,WAAW,EAAE,sBAAsB;SACpC,CAAC;QACK,UAAK,GAAG;YACb,UAAU,EAAE,EAAE;SACf,CAAC;;;;;QAKK,eAAU,GAAG,QAAQ,CAAC;QAEtB,WAAM,GAAY,KAAK,CAAC;QAGxB,mBAAc,GAAW,wBAAwB,CAAC;QAGlD,YAAO,GAAY,KAAK,CAAC;QAEzB,UAAK,GAAY,KAAK,CAAC;QAKvB,mBAAc,GAAQ,gCAAgC,CAAC;QACvD,iBAAY,GAAQ,EAAE,CAAC;QAQ5B,IAAI,CAAC,YAAY,CAAC,mBAAmB,GAAG,uDAAuD,CAAC;KACjG;;;;IAED,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;;QAEpB,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM;YAC5B,KAAK,KAAK;;gBAER,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;gBAC3B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBAClB,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;gBACrC,MAAM;YACR,KAAK,MAAM;;gBAET,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;gBAC3B,IAAI,CAAC,cAAc,GAAG,iBAAiB,CAAC;gBACxC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;gBAClD,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;gBAC1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,MAAM;SACT;;KAGF;;;;;IAED,IACI,MAAM,CAAC,SAAc;QACvB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;KAC7B;;;;;IAED,IACI,WAAW,CAAC,SAAc;QAC5B,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;KAClC;;;;;IAED,IACI,WAAW,CAAC,SAAc;QAC5B,IAAI,CAAC,eAAe,GAAG,SAAS,CAAC;;KAElC;;;;;IAGD,YAAY;QACV,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5C,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACjC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,OAAO,CAAC,0EAA0E,CAC9H,CAAC,CAAC;YACH,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YACxC,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACnC,MAAM,EAAE,CAAC,IAAI,EAAE;YACf,eAAe,EAAE,CAAC,EAAE,EAAE;YACtB,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,UAAU,EAAE,EAAE;YACd,UAAU,EAAE,EAAE;YACd,iBAAiB,EAAE,CAAC,IAAI,CAAC;YACzB,MAAM,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC;SAC5C,CAAC,CAAA;KAEH;;;;;;IAQD,QAAQ;;QAEN,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;YAE9B,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBAAC,OAAO;aAAE;YAC3E,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,eAAe;gBAC1C;oBACE,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,GAAG;oBACtG,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc;oBACtE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;oBAC1C,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;iBAC3C,CAAC;SACH;;QAID,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;YAE9B,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;gBAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBAAC,OAAO;aAAE;YAC3E,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,iBAAiB;gBAC5C;oBACE,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,GAAG;oBACtG,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc;oBACtE,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;oBAC1C,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;iBAC3C,CAAC;SACH;QAED,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,aAAa,EAAE,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;QAEnB,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE;YAChC,OAAO;SACR;aAAM;YACL,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,EAAE;gBACrC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;aACvC;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;aACvC;;;gBAGG,QAAQ,GAAQ;gBAClB,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;gBAC9B,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;aAC3E;;YAED,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,SAAS;;;;YAAC,CAAC,QAAa;gBACpF,IAAI,QAAQ,CAAC,MAAM,IAAI,SAAS,EAAE;oBAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;oBACrC,UAAU;;;oBAAC;wBACT,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;qBACxB,GAAE,IAAI,CAAC,CAAC;oBACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAClD;qBAAM;oBACL,KAAK,CAAC,yCAAyC,CAAC,CAAC;iBAClD;aACF;;;;YAAE,CAAC,KAAK;gBACP,KAAK,CAAC,yCAAyC,CAAC,CAAC;aAClD,EAAC,CAAC;SACJ;KACF;;;;;;;IAOD,eAAe,CAAC,YAAY;;QAE1B,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;YAC9B,IAAI,EAAE,YAAY,CAAC,IAAI;YACvB,KAAK,EAAE,YAAY,CAAC,KAAK;YACzB,WAAW,EAAE,YAAY,CAAC,WAAW;YACrC,QAAQ,EAAE,YAAY,CAAC,QAAQ;YAC/B,MAAM,EAAE,YAAY,CAAC,MAAM;YAC3B,MAAM,EAAE,IAAI;YACZ,eAAe,EAAE,YAAY,CAAC,eAAe;YAC7C,SAAS,EAAE,YAAY,CAAC,SAAS;YACjC,UAAU,EAAE,YAAY,CAAC,UAAU;YACnC,UAAU,EAAE,YAAY,CAAC,UAAU;YACnC,iBAAiB,EAAE,YAAY,CAAC,iBAAiB;SAClD,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,eAAe,CAAC,QAAQ,GAAG,YAAY,CAAC,eAAe,CAAC,KAAK,CAAC;QAC1F,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC;QACpD,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC;QACpD,IAAI,YAAY,CAAC,iBAAiB,IAAI,IAAI,EAAE;YAC1C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,iBAAiB,CAAC,QAAQ,GAAG,YAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC;SACxG;;KAGF;;;;;;;IAKD,UAAU,CAAC,CAAM;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE;YACvC,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE;SACjB,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS;;;;QAAC,MAAM;SAE5C,EAAC,CAAC;KACJ;;;;;;IAMD,aAAa;QACX,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAClD,KAAK,EAAE,OAAO;YACd,MAAM,EAAE,OAAO;YAEf,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,SAAS,EAAE;SAC1E,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS;;;;QAAC,MAAM;SAE5C,EAAC,CAAC;KACJ;;;;;;IAMD,SAAS,CAAC,GAAQ;QAChB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;KACtD;;;;;IAOD,WAAW;QACT,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;KACnB;;;;;IAED,WAAW;QACT,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KACjE;;;YAhQF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,6mNAAuC;;aAExC;;;;YAnBQ,WAAW;YACX,kBAAkB;YAClB,MAAM;YACN,SAAS;YACT,YAAY;;;qBAkFlB,KAAK;0BAKL,KAAK;0BAKL,KAAK;;;AAmMR,MAAa,KAAK;;;;;IAEhB,YACS,SAA8B,EACL,IAAgB;QADzC,cAAS,GAAT,SAAS,CAAqB;QACL,SAAI,GAAJ,IAAI,CAAY;KAAK;;;;IAEvD,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;;YAZF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,6GAAyB;aAC1B;;;;YA/RmB,YAAY;4CAoS3B,MAAM,SAAC,eAAe;;;;AAiB3B,MAAa,gBAAgB;;;;;;IAE3B,YACS,SAAyC,EAChB,IAAmB,EAAU,SAAuB;QAD7E,cAAS,GAAT,SAAS,CAAgC;QAChB,SAAI,GAAJ,IAAI,CAAe;QAAU,cAAS,GAAT,SAAS,CAAc;QACpF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,8BAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACxE;;;;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;KACxB;;;YAdF,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,+aAA2B;aAC5B;;;;YApTmB,YAAY;4CAyT3B,MAAM,SAAC,eAAe;YAxTlB,YAAY;;;;;;;;ACNrB;AA2FA,MAAa,kBAAkB;;;YA/C9B,QAAQ,SAAC;gBACR,OAAO,EAAE;oBACP,UAAU;oBACV,gBAAgB;oBAChB,cAAc;oBACd,aAAa;oBACb,cAAc;oBACd,qBAAqB;oBACrB,cAAc;oBACd,oBAAoB;oBACpB,eAAe;oBACf,qBAAqB;oBACrB,aAAa;oBACb,iBAAiB;oBACjB,cAAc;oBACd,gBAAgB;oBAChB,mBAAmB;oBACnB,eAAe;oBACf,gBAAgB;oBAChB,kBAAkB;oBAClB,iBAAiB;oBACjB,aAAa;oBACb,cAAc;oBACd,aAAa;oBACb,aAAa;oBACb,mBAAmB;oBACnB,kBAAkB;oBAClB,oBAAoB;oBACpB,wBAAwB;oBACxB,cAAc;oBACd,eAAe;oBACf,eAAe;oBACf,gBAAgB;oBAChB,eAAe;oBACf,oBAAoB;oBACpB,iBAAiB;oBACjB,aAAa;oBACb,cAAc;oBACd,aAAa;oBACb,gBAAgB;oBAChB,gBAAgB;oBAChB,aAAa;oBACb,YAAY;oBACZ,eAAe;iBAEhB;aACF;;;;;;;;AC1FD,MA+Ba,iBAAiB;;;YAlB7B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,oBAAoB,EAAE,gBAAgB,EAAE,KAAK,EAAE,gBAAgB,CAAC;gBAC/E,OAAO,EAAE;oBACP,kBAAkB;oBAClB,cAAc;oBACd,gBAAgB;oBAChB,YAAY;oBACZ,WAAW;oBACX,mBAAmB;oBACnB,YAAY;oBACZ,aAAa;oBACb,aAAa;oBACb,gBAAgB;iBACjB;gBACD,OAAO,EAAE,CAAC,oBAAoB,EAAC,gBAAgB,CAAC;gBAChD,eAAe,EAAC,CAAC,KAAK,EAAE,gBAAgB,CAAE;aAE3C;;;;;;;;;;;;;;;;;"}
