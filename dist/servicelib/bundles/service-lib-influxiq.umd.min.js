!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs/operators"),require("@angular/cdk/a11y"),require("@angular/cdk/drag-drop"),require("@angular/cdk/portal"),require("@angular/cdk/scrolling"),require("@angular/cdk/stepper"),require("@angular/cdk/table"),require("@angular/cdk/tree"),require("@angular/material/autocomplete"),require("@angular/material/badge"),require("@angular/material/bottom-sheet"),require("@angular/material/button"),require("@angular/material/button-toggle"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/chips"),require("@angular/material/stepper"),require("@angular/material/datepicker"),require("@angular/material/divider"),require("@angular/material/expansion"),require("@angular/material/grid-list"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/menu"),require("@angular/material/core"),require("@angular/material/paginator"),require("@angular/material/progress-bar"),require("@angular/material/progress-spinner"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/sidenav"),require("@angular/material/slider"),require("@angular/material/slide-toggle"),require("@angular/material/snack-bar"),require("@angular/material/sort"),require("@angular/material/table"),require("@angular/material/tabs"),require("@angular/material/toolbar"),require("@angular/material/tooltip"),require("@angular/material/tree"),require("@angular/core"),require("@ckeditor/ckeditor5-build-classic"),require("@angular/material/dialog"),require("@angular/common/http"),require("@angular/router"),require("ngx-ckeditor"),require("@angular/forms"),require("@angular/common"),require("@angular/platform-browser"),require("listing-angular7"),require("file-upload-lib-influxiq"),require("ngx-cookie-service")):"function"==typeof define&&define.amd?define("service-lib-influxiq",["exports","rxjs/operators","@angular/cdk/a11y","@angular/cdk/drag-drop","@angular/cdk/portal","@angular/cdk/scrolling","@angular/cdk/stepper","@angular/cdk/table","@angular/cdk/tree","@angular/material/autocomplete","@angular/material/badge","@angular/material/bottom-sheet","@angular/material/button","@angular/material/button-toggle","@angular/material/card","@angular/material/checkbox","@angular/material/chips","@angular/material/stepper","@angular/material/datepicker","@angular/material/divider","@angular/material/expansion","@angular/material/grid-list","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/menu","@angular/material/core","@angular/material/paginator","@angular/material/progress-bar","@angular/material/progress-spinner","@angular/material/radio","@angular/material/select","@angular/material/sidenav","@angular/material/slider","@angular/material/slide-toggle","@angular/material/snack-bar","@angular/material/sort","@angular/material/table","@angular/material/tabs","@angular/material/toolbar","@angular/material/tooltip","@angular/material/tree","@angular/core","@ckeditor/ckeditor5-build-classic","@angular/material/dialog","@angular/common/http","@angular/router","ngx-ckeditor","@angular/forms","@angular/common","@angular/platform-browser","listing-angular7","file-upload-lib-influxiq","ngx-cookie-service"],t):t(e["service-lib-influxiq"]={},e.rxjs.operators,e.ng.cdk.a11y,e.ng.cdk["drag-drop"],e.ng.cdk.portal,e.ng.cdk.scrolling,e.ng.cdk.stepper,e.ng.cdk.table,e.ng.cdk.tree,e.ng.material.autocomplete,e.ng.material.badge,e.ng.material["bottom-sheet"],e.ng.material.button,e.ng.material["button-toggle"],e.ng.material.card,e.ng.material.checkbox,e.ng.material.chips,e.ng.material.stepper,e.ng.material.datepicker,e.ng.material.divider,e.ng.material.expansion,e.ng.material["grid-list"],e.ng.material.icon,e.ng.material.input,e.ng.material.list,e.ng.material.menu,e.ng.material.core,e.ng.material.paginator,e.ng.material["progress-bar"],e.ng.material["progress-spinner"],e.ng.material.radio,e.ng.material.select,e.ng.material.sidenav,e.ng.material.slider,e.ng.material["slide-toggle"],e.ng.material["snack-bar"],e.ng.material.sort,e.ng.material.table,e.ng.material.tabs,e.ng.material.toolbar,e.ng.material.tooltip,e.ng.material.tree,e.ng.core,e.ClassicEditor,e.ng.material.dialog,e.ng.common.http,e.ng.router,e.ngxCkeditor,e.ng.forms,e.ng.common,e.ng.platformBrowser,e.listingAngular7,e.fileUploadLibInfluxiq,e.ngxCookieService)}(this,function(e,i,t,a,r,n,o,l,s,c,d,u,m,p,g,_,f,h,b,v,y,x,k,M,C,q,D,S,I,w,F,A,T,j,B,N,L,U,E,P,H,O,z,R,J,V,G,X,K,Q,W,Y,Z,$){"use strict";var ee=(te.prototype.isTokenExpired=function(){},te.prototype.addData=function(e,t){var a={headers:new V.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(i.map(function(e){return e}))},te.prototype.UpdateData=function(e,t){var a={headers:new V.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(i.map(function(e){return e}))},te.prototype.getData=function(e,t){var a={headers:new V.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(i.map(function(e){return e}))},te.prototype.deleteSingleData=function(e,t){var a={headers:new V.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(i.map(function(e){return e}))},te.prototype.deleteMultipleData=function(e,t){var a={headers:new V.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(i.map(function(e){return e}))},te.prototype.UpdateStatusForSingleData=function(e,t){var a={headers:new V.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(i.map(function(e){return e}))},te.prototype.UpdateStatusForMultipleData=function(e,t){var a={headers:new V.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e+"many",JSON.stringify(t),a).pipe(i.map(function(e){return e}))},te.prototype.CustomRequest=function(e,t){var a={headers:new V.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+e,JSON.stringify(t),a).pipe(i.map(function(e){return e}))},te.decorators=[{type:z.Injectable,args:[{providedIn:"root"}]}],te.ctorParameters=function(){return[{type:V.HttpClient},{type:V.HttpClient},{type:$.CookieService}]},te.ngInjectableDef=z.defineInjectable({factory:function(){return new te(z.inject(V.HttpClient),z.inject(V.HttpClient),z.inject($.CookieService))},token:te,providedIn:"root"}),te);function te(e,t,a){this._http=e,this._authHttp=t,this.cookieService=a,this.progress=[],this.uploaderror="",this.accesstoken=this.cookieService.get("jwtToken"),this.fileservername=[],this.serverUrl="",this.getdata_endpointUrl="datalist"}var ae=(Object.defineProperty(ie.prototype,"config",{set:function(e){this.serviceListConfig={apiUrl:e.apiBaseUrl,listEndPoint:e.listEndPoint,datasource:e.datasource,tableName:e.tableName,listArray_skip:["_id","userId","id","updated_at","service_desc","image","additional_img","description_html","service_title_search"],listArray_modify_header:{"service title":"Service title",priority:"Priority",status:"Status",bulletarr:"Number of Bullets","date added":"Date Added"},admintablenameTableName:"admin",statusarr:[{val:1,name:"Active"},{val:0,name:"Inactive"}],updateurl:e.updateEndpoint,editUrl:e.editUrl,jwtToken:e.jwtToken,deleteEndPoint:e.deleteEndPoint,view:e.view,search_settings:{textsearch:[{label:"Search by title",field:"service_title_search"}],selectsearch:[{label:"Search By Status",field:"status",values:[{val:1,name:"Active"},{val:0,name:"Inactive"}]}]},detail_header:["_id"]},this.loader=!1},enumerable:!0,configurable:!0}),ie.prototype.ngOnInit=function(){},ie.decorators=[{type:z.Component,args:[{selector:"lib-servicelib",template:'<mat-card *ngIf="loader==true">\n    <mat-spinner class="spinner"></mat-spinner>\n</mat-card>\n\n\n\x3c!-- ------------------------lib listing being called------------------------ --\x3e\n<mat-card *ngIf="loader==false">\n    <lib-listing class="formfilterdiv"\n        *ngIf="serviceListConfig.datasource !=null && serviceListConfig.datasource.length > 0"\n        [datasource]="serviceListConfig.datasource" [skip]="serviceListConfig.listArray_skip"\n        [modify_header_array]="serviceListConfig.listArray_modify_header" [sourcedata]="serviceListConfig.tableName"\n        [statusarr]="serviceListConfig.statusarr" [jwttoken]="serviceListConfig.jwtToken"\n        [apiurl]="serviceListConfig.apiUrl" [editroute]="serviceListConfig.editUrl"\n        [deleteendpoint]="serviceListConfig.deleteEndPoint" [date_search_source]="serviceListConfig.view"\n        [detail_datatype]="serviceListConfig.pendingmodelapplicationarray_detail_datatype"\n        [date_search_endpoint]="serviceListConfig.listEndPoint" [search_settings]="serviceListConfig.search_settings"\n        [detail_skip_array]="serviceListConfig.detail_header">\n    </lib-listing>\n    \x3c!-- -----------------------------------------------------------------------------\x3e\n\n    <h2 *ngIf="serviceListConfig.datasource.length == 0">No record found.</h2>\n</mat-card>',styles:[""]}]}],ie.ctorParameters=function(){return[]},ie.propDecorators={config:[{type:z.Input}]},ie);function ie(){this.loader=!0}var re=(ne.decorators=[{type:z.NgModule,args:[{exports:[t.A11yModule,o.CdkStepperModule,l.CdkTableModule,s.CdkTreeModule,a.DragDropModule,c.MatAutocompleteModule,d.MatBadgeModule,u.MatBottomSheetModule,m.MatButtonModule,p.MatButtonToggleModule,g.MatCardModule,_.MatCheckboxModule,f.MatChipsModule,h.MatStepperModule,b.MatDatepickerModule,J.MatDialogModule,v.MatDividerModule,y.MatExpansionModule,x.MatGridListModule,k.MatIconModule,M.MatInputModule,C.MatListModule,q.MatMenuModule,D.MatNativeDateModule,S.MatPaginatorModule,I.MatProgressBarModule,w.MatProgressSpinnerModule,F.MatRadioModule,D.MatRippleModule,A.MatSelectModule,T.MatSidenavModule,j.MatSliderModule,B.MatSlideToggleModule,N.MatSnackBarModule,L.MatSortModule,U.MatTableModule,E.MatTabsModule,P.MatToolbarModule,H.MatTooltipModule,O.MatTreeModule,r.PortalModule,n.ScrollingModule]}]}],ne);function ne(){}var oe=(le.prototype.ngOnInit=function(){switch(this.loader=!1,this.generateForm(),"edit"!=this.configData.action&&this.addBulletList("",""),this.configData.action){case"add":this.buttonText="SUBMIT",this.flag=!1,this.flag2=!1,this.header_name="Add Service";break;case"edit":this.buttonText="UPDATE",this.successMessage="Service Edited!!!",this.setDefaultValue(this.configData.defaultData),this.header_name="Edit Service",this.flag=!0,this.flag2=!0,0==this.configData.defaultData.additional_img&&(this.flag2=!1)}},Object.defineProperty(le.prototype,"config",{set:function(e){this.configData=e},enumerable:!0,configurable:!0}),Object.defineProperty(le.prototype,"imageUpload",{set:function(e){this.imageConfigData=e},enumerable:!0,configurable:!0}),Object.defineProperty(le.prototype,"imageUpload2",{set:function(e){this.imageConfigData2=e},enumerable:!0,configurable:!0}),le.prototype.generateForm=function(){this.serviceForm=this.formBuilder.group({service_title:["",[K.Validators.required]],description:["",[K.Validators.required]],additional_details:[""],priority:["",[K.Validators.required]],status:[!0],bulletarr:this.formBuilder.array([]),service_img:[""],additional_img:[""]})},le.prototype.setDefaultValue=function(e){var t=this;e.bulletarr.forEach(function(e){t.addBulletList(e.bullet_title,e.bullet_desc)}),this.serviceForm.patchValue({service_title:e.service_title,description:e.description,additional_details:e.additional_details,priority:e.priority,status:e.status,service_img:e.service_img,additional_img:e.additional_img}),this.img_var=e.service_img.basepath+e.service_img.image,this.image_name=e.service_img.name,this.image_type=e.service_img.type,this.img_var2=e.additional_img.basepath+e.additional_img.image,this.image_name2=e.additional_img.name,this.image_type2=e.additional_img.type},le.prototype.addBulletList=function(e,t){this.serviceForm.controls.bulletarr.push(this.formBuilder.group({bullet_title:[e],bullet_desc:[t]}))},le.prototype.deleteBulletList=function(){this.serviceForm.controls.bulletarr.removeAt(1)},le.prototype.trackByFn=function(e){return e},le.prototype.openModaltest=function(){this.openDialog("Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry")},le.prototype.onSubmit=function(){var t=this;for(var e in this.serviceForm.controls)this.serviceForm.controls[e].markAsTouched();if(this.imageConfigData.files){if(1<this.imageConfigData.files.length)return this.ErrCode=!0,void(this.img_missing=!1);this.serviceForm.value.service_img={basepath:this.imageConfigData.files[0].upload.data.basepath+"/"+this.imageConfigData.path+"/",image:this.imageConfigData.files[0].upload.data.data.fileservername,name:this.imageConfigData.files[0].name,type:this.imageConfigData.files[0].type},this.img_missing=!1}else null!=this.serviceForm.value.service_img&&""!=this.serviceForm.value.service_img||(this.img_missing=!0,this.ErrCode=!1);if(this.imageConfigData2.files){if(1<this.imageConfigData2.files.length)return void(this.ErrCode2=!0);this.serviceForm.value.additional_img={basepath:this.imageConfigData2.files[0].upload.data.basepath+"/"+this.imageConfigData2.path+"/",image:this.imageConfigData2.files[0].upload.data.data.fileservername,name:this.imageConfigData2.files[0].name,type:this.imageConfigData2.files[0].type}}for(var a in this.serviceForm.controls)this.serviceForm.controls[a].markAsTouched();if(this.loader=!0,1!=this.img_missing&&!this.serviceForm.invalid){this.serviceForm.value.status?this.serviceForm.value.status=1:this.serviceForm.value.status=0;var i={source:this.configData.source,data:Object.assign(this.serviceForm.value,this.configData.condition),token:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NzcxNzc4MDIsImlhdCI6MTU3NzA5MTQwMn0.jtwImZIdKK-9WxeQQHef5YLSXvN05CiJeAw-lXCcHtE"};this.servicehttp.addData(this.configData.endpoint,i).subscribe(function(e){"success"==e.status?(t.openDialog(t.successMessage),setTimeout(function(){t.dialogRef.close()},5e3),t.router.navigate([t.configData.callBack])):alert("Some error occurred. Please try again.")},function(e){alert("Some error occurred. Please try again.")})}},le.prototype.openDialog=function(e){this.dialogRef=this.dialog.open(se,{width:"250px",data:{msg:e},panelClass:"success_modal_service"}),this.dialogRef.afterClosed().subscribe(function(e){})},le.prototype.resetserviceForm=function(){this.serviceForm.reset()},le.prototype.inputBlur=function(e){this.serviceForm.controls[e].markAsUntouched()},le.prototype.clear_image=function(){this.flag=!1,this.img_missing=!0},le.prototype.clear_image2=function(){this.flag2=!1,this.serviceForm.value.additional_img=!1},le.decorators=[{type:z.Component,args:[{selector:"lib-addedit-service",template:'<mat-card>\n  <mat-toolbar color="primary" style="justify-content: center; align-items: center;">\n    <h2 class="headerSpan">{{ header_name }}</h2>\n  </mat-toolbar>\n  <span class="formspan">\n    <mat-card-content class="example-container">\n\n\n      <form [formGroup]="serviceForm" autocomplete="off">\n\n\n\n        \x3c!-- ------------------------------service title------------------- --\x3e\n        <mat-form-field>\n          <input matInput placeholder="Service title" formControlName="service_title"\n            (blur)="inputBlur(\'service_title\')">\n          <mat-error *ngIf="!serviceForm.controls[\'service_title\'].valid\n        && serviceForm.controls[\'service_title\'].errors.required"> Service title is required.</mat-error>\n        </mat-form-field><br>\n        \x3c!-- -------------------------------------------------------------- --\x3e\n\n\n\n        \x3c!-- --------------------------------description------------------- --\x3e\n        <mat-label>Write Description...</mat-label>\n        <ck-editor formControlName="description"  [config]="editorconfig">\n        </ck-editor>\n        \x3c!-- <ckeditor [data]="editorData" formControlName="description" (blur)="inputBlur(\'description\')"> --\x3e\n        \x3c!-- </ckeditor> --\x3e\n\n        \x3c!-- <ckeditor [editor]="Editor" [config]="editorConfig" formControlName="description"\n          (blur)="inputBlur(\'description\')"></ckeditor> --\x3e\n\n\n        <mat-error *ngIf="!serviceForm.controls[\'description\'].valid\n          && serviceForm.controls[\'description\'].errors.required && serviceForm.controls[\'description\'].touched">\n          Description is required.\n        </mat-error>\n        <br>\n        \x3c!-- -------------------------------------------------------------- --\x3e\n\n\n        \x3c!-- --------------------------------additional details------------------- --\x3e\n\n        <mat-label>Additional Details If Any...</mat-label>\n        <ck-editor formControlName="additional_details" [config]="editorconfig">\n        </ck-editor>\n\n        <br>\n        \x3c!-- -------------------------------------------------------------- --\x3e\n\n        \x3c!-- --------------------------------priority------------------- --\x3e\n        <mat-form-field>\n          <input matInput type="number" placeholder="Priority" formControlName="priority"\n            (blur)="inputBlur(\'priority\')">\n          <mat-error *ngIf="!serviceForm.controls[\'priority\'].valid\n           && serviceForm.controls[\'priority\'].errors.required"> Priority is required.</mat-error>\n        </mat-form-field><br>\n        \x3c!-- -------------------------------------------------------------- --\x3e\n\n\n        \x3c!-- --------------------------------status------------------- --\x3e\n        <mat-label>Status:</mat-label><br>\n        <mat-checkbox color="primary" formControlName="status">Active</mat-checkbox><br>\n        \x3c!-- -------------------------------------------------------------- --\x3e\n\n\n\n        \x3c!-- ______________________________________________FORM ARRAY_________________________________________ --\x3e\n\n        <div formArrayName="bulletarr" class="bulletarr"\n          *ngFor="let blist of serviceForm.controls.bulletarr?.value; let i = index; trackBy: trackByFn">\n          <ng-container [formGroupName]="i">\n            <div class="top_header">\n              bullet list\n            </div>\n            \x3c!-- ------------bullet title-----------  --\x3e\n            <mat-form-field>\n              <input matInput formControlName="bullet_title" placeholder="Bullet title">\n              <mat-icon matSuffix>title</mat-icon>\n            </mat-form-field><br>\n            \x3c!-- -----------------------------------  --\x3e\n\n\n            \x3c!-- --------------------bullet description-----------------  --\x3e\n            <mat-form-field>\n              <textarea matInput formControlName="bullet_desc" placeholder="Bullet description"></textarea>\n              <mat-icon matSuffix>format_list_bulleted</mat-icon>\n            </mat-form-field><br>\n            \x3c!-- ----------------------------------------------------------  --\x3e\n          </ng-container>\n          <button (click)="addBulletList(\'\',\'\')" type="button">\n            <mat-icon>add</mat-icon>\n          </button>\n          <button (click)="deleteBulletList()" *ngIf="i!=0" type="button">\n            <mat-icon>remove</mat-icon>\n          </button>\n        </div>\n        \x3c!-- __________________________________________________________________________________________________________ --\x3e\n\n        <h1>Service Image:</h1>\n\n        <div class="warning_reso">\n          <mat-icon>warning</mat-icon>\n          <p>Resolution: 650 x 300</p>\n        </div>\n\n\n        <lib-file-upload [config]="imageConfigData"></lib-file-upload>\n        <div *ngIf="ErrCode==true" class="desc_error">\n          <mat-icon>error</mat-icon>\n          <p>Please add just one service image.</p>\n        </div>\n        <div *ngIf="img_missing==true" class="desc_error">\n          <mat-icon>error</mat-icon>\n          <p>Please provide a service image.</p>\n        </div>\n\n\n\n        <mat-card-content class="files-view" *ngIf="flag==true">\n          <mat-card class="example-card">\n            <img mat-card-image [attr.src]="img_var">\n            <mat-card-title>{{ image_name }}</mat-card-title>\n            <mat-card-subtitle>{{ image_type }}</mat-card-subtitle>\n            <span class="closecard" (click)="clear_image()"><i class="material-icons">clear</i></span>\n          </mat-card>\n        </mat-card-content>\n\n        \x3c!-- ______________________________________________________________________________________________________________ --\x3e\n        \x3c!-- Additional Image  --\x3e\n        <h1>Additional Image:</h1>\n        <lib-file-upload [config]="imageConfigData2"></lib-file-upload>\n        <div *ngIf="ErrCode2==true" class="desc_error">\n          <mat-icon>error</mat-icon>\n          <p>Please add just one additional image.</p>\n        </div><br>\n\n\n\n\n        <mat-card-content class="files-view" *ngIf="flag2==true">\n          <mat-card class="example-card">\n            <img mat-card-image [attr.src]="img_var2">\n            <mat-card-title>{{ image_name2 }}</mat-card-title>\n            <mat-card-subtitle>{{ image_type2 }}</mat-card-subtitle>\n            <span class="closecard" (click)="clear_image2()"><i class="material-icons">clear</i></span>\n          </mat-card>\n        </mat-card-content>\n\n        <span><button type="button" class="submitbtn" mat-raised-button color="primary"\n            (click)="onSubmit()">{{buttonText}}</button></span>\n        <span><button type="reset" class="submitbtn" mat-raised-button color="primary"\n            (click)="resetserviceForm()">RESET</button></span>\n\n      </form>\n    </mat-card-content>\n  </span>\n  <button mat-button type="button" class="demo_modal_button" (click)="openModaltest()">Demo Modal</button>\n</mat-card>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.main-class .submitbtn{display:block;width:170px;margin:10px auto;background:#3f50b5!important;color:#fff}.main-class .material-icons{cursor:pointer}.formspan{background-color:#e7e9ea;border:6px solid #fff;border-bottom:10px solid #fff;display:inline-block;width:100%;position:relative;z-index:9}.formspan .example-container{display:flex;flex-direction:column;width:98%;padding:14px;margin-bottom:0}.formspan .form-field-span,.formspan .mat-form-field{display:inline-block;position:relative;text-align:left;width:98%;background:#fff;margin-bottom:9px;padding:1px 14px}.formspan .form-field-span .mat-checkbox,.formspan .form-field-span .mat-radio-button{padding-right:15px;padding-bottom:15px;display:inline-block}.formspan .mat-form-field-wrapper{padding-bottom:0!important}.form-field-span .mat-error{font-size:13px!important}.mat-error{color:#f44336;font-size:13px!important}button.submitbtn.mat-raised-button.mat-primary{margin-right:15px}.bulletarr{margin-top:20px;border:3px solid #3f50b4;box-sizing:border-box;margin-bottom:15px;padding:10px}.top_header{background:#3f50b4;padding:16px;color:#fff;font-weight:700;text-transform:capitalize}h1{color:#3f50b4}.files-view{background-repeat:no-repeat;background-size:cover;background-position:center;height:auto!important;width:82%;margin:20px auto;border-radius:10px;display:flex;justify-content:center;align-items:stretch;flex-wrap:wrap}.files-view .mat-card{z-index:9;margin:10px!important;display:flex;flex-wrap:wrap;justify-content:center;width:27%;position:relative}.files-view .mat-card .mat-card-actions,.files-view .mat-card .mat-card-titlt{display:inline-block;width:100%}.files-view .mat-card .mat-card-subtitle{display:inline-block;width:100%;text-align:center}.closecard{position:absolute;top:-10px;right:-8px;background:#464545;height:25px;width:25px;border-radius:50%;border:1px solid #696969;color:#fff;text-align:center;box-shadow:0 2px 6px #00000070;cursor:pointer}.closecard i{font-size:18px;line-height:27px}.desc_error{color:#d8000c;border:2px solid #d8000c;background-color:#ff97ce;padding:0 10px;display:inline-flex;align-items:center}.desc_error .mat-icon{margin-right:10px}.warning_reso{color:#d8000c;border:2px solid #d8000c;background-color:#edf104;padding:0 10px;display:inline-flex;align-items:center}.warning_reso .mat-icon{margin-right:10px}"]}]}],le.ctorParameters=function(){return[{type:K.FormBuilder},{type:ee},{type:G.Router},{type:J.MatDialog},{type:$.CookieService}]},le.propDecorators={config:[{type:z.Input}],imageUpload:[{type:z.Input}],imageUpload2:[{type:z.Input}]},le);function le(e,t,a,i,r){this.formBuilder=e,this.servicehttp=t,this.router=a,this.dialog=i,this.cookieService=r,this.editorData="<p>Write description...</p>",this.Editor2=R,this.editorConfig2={placeholder:"Please provide additional details..."},this.model2={editorData:""},this.loader=!1,this.buttonText="SUBMIT",this.successMessage="Service Added!!!",this.img_arr=[],this.ErrCode=!1,this.ErrCode2=!1,this.img_missing=!1,this.editorconfig={},this.editorconfig.extraAllowedContent="*[class](*),span;ul;li;table;td;style;*[id];*(*);*{*}"}var se=(ce.prototype.onNoClick=function(){this.dialogRef.close()},ce.decorators=[{type:z.Component,args:[{selector:"app-modal",template:"<h1 mat-dialog-title>MESSAGE</h1>\n<div mat-dialog-content>\n   <p>{{ data.msg }}</p>\n</div>\n\n"}]}],ce.ctorParameters=function(){return[{type:J.MatDialogRef},{type:undefined,decorators:[{type:z.Inject,args:[J.MAT_DIALOG_DATA]}]}]},ce);function ce(e,t){this.dialogRef=e,this.data=t}var de=(ue.decorators=[{type:z.NgModule,args:[{declarations:[ae,oe,se],imports:[re,V.HttpClientModule,G.RouterModule,X.CKEditorModule,K.FormsModule,K.ReactiveFormsModule,Q.CommonModule,W.BrowserModule,Y.ListingModule,Z.FileUploadModule],exports:[ae,oe,se],entryComponents:[se],providers:[$.CookieService]}]}],ue);function ue(){}e.ServicelibService=ee,e.ServicelibComponent=ae,e.ServicelibModule=de,e.ɵa=oe,e.ɵb=se,e.ɵc=re,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=service-lib-influxiq.umd.min.js.map