{"version":3,"sources":["ng://resourcelib/lib/resourcelib.service.ts","ng://resourcelib/lib/resourcelib.component.ts","ng://resourcelib/lib/Modules/material-module.ts","ng://resourcelib/lib/Components/addedit-resourceapp/addedit-resourceapp.component.ts","ng://resourcelib/lib/resourcelib.module.ts"],"names":["ResourcelibService","prototype","isTokenExpired","addData","endpoint","requestdata","httpOptions","headers","HttpHeaders","Content-Type","Authorization","this","accesstoken","_http","post","serverUrl","JSON","stringify","pipe","map","res","UpdateData","getData","deleteSingleData","deleteMultipleData","UpdateStatusForSingleData","UpdateStatusForMultipleData","CustomRequest","Injectable","args","providedIn","HttpClient","CookieService","_authHttp","cookieService","progress","uploaderror","get","fileservername","getdata_endpointUrl","ResourcelibComponent","Object","defineProperty","receivedData","resourceListConfig","apiUrl","apiBaseUrl","listEndPoint","datasource","tableName","listArray_skip","listArray_modify_header","category name","parent category","description","priority","status","admintablenameTableName","statusarr","val","name","updateurl","updateEndpoint","editUrl","jwtToken","deleteEndPoint","view","search_settings","textsearch","label","field","selectsearch","values","loader","ngOnInit","Component","selector","template","Input","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","AddeditResourceappComponent","getConfig","configData","generateForm","action","buttonText","header_name","successMessage","setDefaultValue","defaultData","getParentCategory","resourceForm","formBuilder","group","category_name","Validators","required","parent_category","onSubmit","_this","invalid","value","parseInt","postData","source","data","assign","condition","resourceService","subscribe","response","openDialog","setTimeout","dialogRef","close","router","navigate","callBack","alert","error","token","endpoint2","result","cat_array","console","log","defaultValue","patchValue","userId","x","dialog","open","Modal","width","msg","afterClosed","FormBuilder","Router","MatDialog","onNoClick","MatDialogRef","Inject","MAT_DIALOG_DATA","ResourcelibModule","declarations","imports","ListingModule","FormsModule","ReactiveFormsModule","CommonModule","BrowserModule","entryComponents"],"mappings":"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","sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpClientModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResourcelibService {\n  public lengthis;\n  public percentageis;\n  public inprogress;\n  public progress: any = [];\n  public uploadtype;\n  public uploaderror: any = '';\n  public accesstoken: any = this.cookieService.get('jwtToken');;\n  public fileservername: any = [];\n  public serverUrl: any = '';\n  public addendpointUrl: any;\n  public updateendpointUrl: any;\n  public deletesingle_endpointUrl: any;\n  public updatestatus_single_endpointUrl: any;\n  public deletemultiple_endpointUrl: any;\n  public updatestatus_multiple_endpointUrl: any;\n  public getdata_endpointUrl: any = 'datalist';\n\n  constructor(private _http: HttpClient, private _authHttp: HttpClient,private cookieService : CookieService) { }\n\n  isTokenExpired() {\n    // const helper = new JwtHelperService();\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\n    // console.log('id_token isExpired:',isIdTokenExpired)\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\n  }\n\n  addData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  getData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  deleteMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForSingleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  UpdateStatusForMultipleData(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint + 'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n  CustomRequest(endpoint: any, requestdata: any) {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'Authorization': this.accesstoken\n      })\n    };\n    var result = this._http.post(this.serverUrl + endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\n    return result;\n  }\n\n}\n","import { Component, OnInit,Input } from '@angular/core';\n\n@Component({\n  selector: 'lib-resourcelib',  \n  templateUrl: 'resourcelib.component.html',\n  styleUrls: ['resourcelib.component.css']\n})\nexport class ResourcelibComponent implements OnInit {\n\n  // ===========================================declaration================================\n  resourceListConfig:any;\n  loader:boolean=false;\n  // ======================================================================================\n\n  // ================================================Input For Lib Listing================================\n  @Input()\n  set config(receivedData: any) {\n   \n    this.resourceListConfig = {\n      apiUrl: receivedData.apiBaseUrl,\n      listEndPoint: receivedData.listEndPoint,\n      datasource: receivedData.datasource,\n      tableName: receivedData.tableName,\n      listArray_skip: [\"_id\", \"userId\", \"created_at\", \"id\", \"updated_at\",\"image\"],\n      listArray_modify_header: { \"category name\": \"Category Name\", \"parent category\": \"Parent Category\", \"description\": \"Description\", \"priority\": \"Priority\", \"status\": \"Status\" },\n      admintablenameTableName: \"admin\",\n      statusarr: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }],\n      updateurl: receivedData.updateEndpoint,\n      editUrl: receivedData.editUrl,\n      jwtToken: receivedData.jwtToken,\n      deleteEndPoint: receivedData.deleteEndPoint,\n      view: receivedData.view,\n      search_settings:{\n        textsearch: [{ label: \"Search by Category name...\", field: 'category_name' },{ label: \"Search by parent category...\", field: 'parent_category' }],\n        selectsearch: [{ label: 'Search By Status', field: 'status', values: [{ val: 1, name: \"Active\" }, { val: 0, name: 'Inactive' }] }],\n      },\n      //  /*Showing Image in the Modal*/\n      //  pendingmodelapplicationarray_detail_datatype: [{\n      //   key: \"image\",\n      //   value: 'image',\n      //   fileurl: 'https://s3.us-east-2.amazonaws.com/crmfiles.influxhostserver/testimonial/'             // Image path \n      // }],\n    }\n    this.loader = false;\n  }\n  // ====================================================================================================\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n//import { MatFileUploadModule } from 'angular-material-fileupload';\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    //MatFileUploadModule\n  ]\n})\nexport class DemoMaterialModule {}\n\n\n/**  Copyright 2019 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */","import { Component, OnInit, Input,Inject } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl, Form } from '@angular/forms';\nimport { ResourcelibService } from '../../resourcelib.service';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nexport interface DialogData {\n  msg: string;\n}\n\n\n@Component({\n  selector: 'lib-addedit-resourceapp',\n  templateUrl: './addedit-resourceapp.component.html',\n  styleUrls: ['./addedit-resourceapp.component.css']\n})\nexport class AddeditResourceappComponent implements OnInit {\n\n\n  // =============================================Declarations=====================================\n  header_name: any = \"ADD\";\n  buttonText: any = \"SUBMIT\";\n  resourceForm: FormGroup;\n  loader: boolean = false;\n  configData: any;\n  successMessage: any = \"Submitted Successfully\";\n  cat_array:any=[];\n  dialogRef:any;\n  // ==============================================================================================\n\n  constructor(private formBuilder: FormBuilder, private resourceService: ResourcelibService,\n    private router: Router,private cookieService : CookieService,public dialog: MatDialog) { }\n\n  // ===========================================APP INPUT=====================================\n  @Input()\n  set config(getConfig: any) {\n    this.configData = getConfig;\n  }\n  // ============================================================================================\n\n\n  \n\n\n  ngOnInit() {\n    this.loader = false;\n    this.generateForm();\n    switch (this.configData.action) {\n      case 'add':\n        /* Button text */\n        this.buttonText = \"SUBMIT\";\n        this.header_name = \"ADD\";\n        break;\n      case 'edit':\n        /* Button text */\n        this.buttonText = \"UPDATE\";\n        this.successMessage = \"One row updated\";\n        this.setDefaultValue(this.configData.defaultData);\n        this.header_name = \"EDIT\";\n        break;\n    }\n    this.getParentCategory();\n  }\n\n\n  // =============================================GENERATE FORM=================================\n  generateForm() {\n    this.resourceForm = this.formBuilder.group({\n      category_name: ['',Validators.required],\n      parent_category: ['',],\n      description: ['',Validators.required],\n      priority: ['',Validators.required],\n      status: ['',]\n    });\n  }\n\n  // ============================================================================================\n\n\n\n\n\n\n  // ==========================================SUBMIT FUNCTION==========================================\n  onSubmit() {\n\n\n    // this.resourceForm.controls['testimonial'].markAsTouched();\n    this.loader = true;\n    /* stop here if form is invalid */\n    if (this.resourceForm.invalid) {\n      return;\n    } else {\n      if (this.resourceForm.value.status) {\n        this.resourceForm.value.status = parseInt(\"1\");\n      } else {\n        this.resourceForm.value.status = parseInt(\"0\");;\n      }\n\n      /* start process to submited data */\n      let postData: any = {\n        source: this.configData.source,\n        data: Object.assign(this.resourceForm.value, this.configData.condition)\n      };\n      this.resourceService.addData(this.configData.endpoint, postData).subscribe((response: any) => {\n        if (response.status == \"success\") {\n          this.openDialog(this.successMessage);\n          setTimeout(() => {\n            this.dialogRef.close();\n          }, 2000);\n       \n          this.router.navigate([this.configData.callBack]);\n        } else {\n          alert(\"Some error occurred. Please try again.\");\n        }\n      }, (error) => {\n        alert(\"Some error occurred. Please try again.\");\n      });\n    }\n  }\n  // =================================================================================================\n\n\n\n\n\n\n\n\n  // ======================================GetParentCategory=============================\n    \n        getParentCategory()\n        {\n          let data: any = {\n            \"source\": \"resources\",\n            \"token\": this.cookieService.get('jwtToken')\n          }\n      \n          this.resourceService.getData(this.configData.endpoint2+\"/datalist\", data).subscribe((response) => {\n      \n            let result: any = {};\n            result = response;\n            this.cat_array=result.res;\n            console.log(this.cat_array);      \n          });\n        }\n  // =============================================================================\n\n\n\n\n\n\n\n\n\n  // ================================================Default value======================================\n  setDefaultValue(defaultValue) {\n    this.resourceForm.patchValue({\n      category_name:defaultValue.category_name,\n      parent_category:defaultValue.parent_category,\n      description:defaultValue.description,\n      priority:defaultValue.priority,\n      status:defaultValue.status,\n      userId: null,\n    });\n  }\n  // ==================================================================================================\n\n  \n\n  // =========================================MODAL functions==========================================\n  openDialog(x: any): void {\n    this.dialogRef = this.dialog.open(Modal, {\n      width: '250px',\n      data: { msg: x }\n    });\n\n    this.dialogRef.afterClosed().subscribe(result => {\n\n    });\n  }\n  // =====================================================================================================\n\n}\n\n\n\n\n// ============================================MODAL COMPONENT===========================================\n@Component({\n  selector: 'app-modal',\n  templateUrl: 'modal.html',\n})\nexport class Modal {\n\n  constructor(\n    public dialogRef: MatDialogRef<Modal>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n// ======================================================================================================\n","import { NgModule } from '@angular/core';\nimport { ResourcelibComponent } from './resourcelib.component';\nimport { ListingModule } from 'listing-angular7';\nimport { DemoMaterialModule} from './Modules/material-module';\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\nimport { AddeditResourceappComponent,Modal } from './Components/addedit-resourceapp/addedit-resourceapp.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [ResourcelibComponent, AddeditResourceappComponent,Modal],\n  imports: [\n    ListingModule,\n    DemoMaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    BrowserModule\n  ],\n  exports: [ResourcelibComponent,AddeditResourceappComponent],\n  entryComponents:[Modal]\n})\nexport class ResourcelibModule { }\n"]}